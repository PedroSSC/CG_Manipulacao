/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manipulacao;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Kokar
 */
public class FrameManipulacao extends javax.swing.JFrame {
    BufferedImage imagemOriginal;
    BufferedImage imagemComparativa;
    BufferedImage imagemNegativo;
    BufferedImage imagemLimiar;
    BufferedImage imagemAND;
    /**
     * Creates new form FrameNegativo
     */
    public FrameManipulacao() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Jfc = new javax.swing.JFileChooser();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        Abrir = new javax.swing.JButton();
        imagem1 = new javax.swing.JPanel();
        Lb1 = new javax.swing.JLabel();
        btnReload = new javax.swing.JButton();
        btnNegativo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnLimiar = new javax.swing.JButton();
        TfLimiar = new javax.swing.JTextField();
        imagem2 = new javax.swing.JPanel();
        Lb2 = new javax.swing.JLabel();
        Abrir2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnAND = new javax.swing.JButton();
        btnOR = new javax.swing.JButton();
        imagem3 = new javax.swing.JPanel();
        Lb3 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Abrir.setText("Buscar");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        imagem1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagem1.setPreferredSize(new java.awt.Dimension(400, 400));

        Lb1.setText("imagem");

        javax.swing.GroupLayout imagem1Layout = new javax.swing.GroupLayout(imagem1);
        imagem1.setLayout(imagem1Layout);
        imagem1Layout.setHorizontalGroup(
            imagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Lb1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        imagem1Layout.setVerticalGroup(
            imagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagem1Layout.createSequentialGroup()
                .addComponent(Lb1)
                .addGap(0, 384, Short.MAX_VALUE))
        );

        btnReload.setText("Recarregar");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        btnNegativo.setText("Negativo");
        btnNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativoActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnLimiar.setText("Limiar");
        btnLimiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TfLimiar)
                    .addComponent(btnLimiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TfLimiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imagem2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagem2.setPreferredSize(new java.awt.Dimension(400, 400));

        Lb2.setText("imagem");

        javax.swing.GroupLayout imagem2Layout = new javax.swing.GroupLayout(imagem2);
        imagem2.setLayout(imagem2Layout);
        imagem2Layout.setHorizontalGroup(
            imagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Lb2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        imagem2Layout.setVerticalGroup(
            imagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagem2Layout.createSequentialGroup()
                .addComponent(Lb2)
                .addGap(0, 384, Short.MAX_VALUE))
        );

        Abrir2.setText("Buscar");
        Abrir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Abrir2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(93, 115));

        btnAND.setText("AND");
        btnAND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnANDActionPerformed(evt);
            }
        });

        btnOR.setText("OR");
        btnOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnORActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAND, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(btnOR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAND)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOR)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imagem3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagem3.setPreferredSize(new java.awt.Dimension(400, 400));

        Lb3.setText("imagem");

        javax.swing.GroupLayout imagem3Layout = new javax.swing.GroupLayout(imagem3);
        imagem3.setLayout(imagem3Layout);
        imagem3Layout.setHorizontalGroup(
            imagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Lb3, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        imagem3Layout.setVerticalGroup(
            imagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagem3Layout.createSequentialGroup()
                .addComponent(Lb3)
                .addGap(0, 384, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReload, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(btnNegativo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Abrir2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagem2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(imagem3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagem2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Abrir2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imagem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReload)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNegativo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Abrir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imagem3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        try{
            
            JFileChooser Jfc = new JFileChooser();
            Jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            Jfc.showDialog(Jfc, "Selecione");
            String caminho = Jfc.getSelectedFile().getAbsolutePath();
            imagemOriginal = ImageIO.read(new File(caminho));


            ImageIO.write(imagemOriginal, "jpg",new File("ImagemOriginal.jpg"));
            
            mostrarOriginal();
     
        } catch (IOException ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_AbrirActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        try{
            reload();
        
        } catch (Exception ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativoActionPerformed
        int largura = imagemOriginal.getWidth();
        int altura = imagemOriginal.getHeight();
        
        for(int c = 1; c < largura; c++){
            for(int l = 1; l< altura; l++){
                Color cor = new Color(imagemOriginal.getRGB(c, l));
                
                int blue = cor.getBlue();
                int red = cor.getRed();
                int green = cor.getGreen();
                
                blue = 255 - blue;
                red = 255 - red;
                green = 255 - green;

                int rgb = new Color(red, blue, green).getRGB();
                imagemOriginal.setRGB(c, l, rgb);
            }
        }
        
        largura = imagemComparativa.getWidth();
        altura = imagemComparativa.getHeight();
        for(int c = 1; c < largura; c++){
            for(int l = 1; l< altura; l++){
                Color cor = new Color(imagemComparativa.getRGB(c, l));
                
                int blue = cor.getBlue();
                int red = cor.getRed();
                int green = cor.getGreen();
                
                blue = 255 - blue;
                red = 255 - red;
                green = 255 - green;

                int rgb = new Color(red, blue, green).getRGB();
                imagemComparativa.setRGB(c, l, rgb);
            }
        }
        
        try {
            ImageIO.write(imagemOriginal, "jpg", new File("imagemNegativo.jpg"));
            imagemNegativo = ImageIO.read( new File("imagemNegativo.jpg"));
            mostrarImagem(imagemNegativo, Lb1, imagem1);
            
            ImageIO.write(imagemComparativa, "jpg", new File("imagemNegativo.jpg"));
            imagemNegativo = ImageIO.read( new File("imagemNegativo.jpg"));
            mostrarImagem(imagemNegativo, Lb2, imagem2);
        } catch (Exception ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNegativoActionPerformed

    private void btnLimiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimiarActionPerformed
        int limiar = Integer.parseInt(TfLimiar.getText());
        limiar(limiar, imagemOriginal);
        mostrarImagem(imagemLimiar, Lb1, imagem1);
        
        limiar(limiar, imagemComparativa);
        mostrarImagem(imagemLimiar, Lb2, imagem2);
    }//GEN-LAST:event_btnLimiarActionPerformed

    private void Abrir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Abrir2ActionPerformed
        try{
            
            JFileChooser Jfc = new JFileChooser();
            Jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            Jfc.showDialog(Jfc, "Selecione");
            String caminho = Jfc.getSelectedFile().getAbsolutePath();
            imagemComparativa = ImageIO.read(new File(caminho));


            ImageIO.write(imagemComparativa, "jpg",new File("ImagemComparativa.jpg"));
            
            mostrarComparativa();
     
        } catch (IOException ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_Abrir2ActionPerformed

    private void btnANDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnANDActionPerformed
        limiar(127, imagemOriginal);
        mostrarOriginal();
        limiar(127, imagemComparativa);
        mostrarComparativa();
        
        int largura = imagemOriginal.getWidth();
        int altura = imagemOriginal.getHeight();
        
        //int varAND = Integer.parseInt(tfAND.getText());
        
        
        for(int c = 1; c < largura; c++){
            for(int l = 1; l< altura; l++){
                Color corOriginal = new Color(imagemOriginal.getRGB(c, l));
                int redOriginal = corOriginal.getRed();
                Color corCompara = new Color(imagemComparativa.getRGB(c, l));
                int redCompara = corCompara.getRed();
                
                if(redOriginal == 255 && redCompara == 255){
                    int rgb = new Color(255, 255, 255).getRGB();
                    imagemLimiar.setRGB(c, l, rgb);
                }
                else{
                    int rgb = new Color(0, 0, 0).getRGB();
                    imagemLimiar.setRGB(c, l, rgb);
                }
            }
        }
        
        mostarComparativo();
        
    }//GEN-LAST:event_btnANDActionPerformed

    private void btnORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnORActionPerformed
        limiar(127, imagemOriginal);
        mostrarOriginal();
        limiar(127, imagemComparativa);
        mostrarComparativa();
        
        int largura = imagemOriginal.getWidth();
        int altura = imagemOriginal.getHeight();

        for(int c = 1; c < largura; c++){
            for(int l = 1; l< altura; l++){
                Color corOriginal = new Color(imagemOriginal.getRGB(c, l));
                int redOriginal = corOriginal.getRed();
                Color corCompara = new Color(imagemComparativa.getRGB(c, l));
                int redCompara = corCompara.getRed();
                
                if(redOriginal == 255 || redCompara == 255){
                    int rgb = new Color(255, 255, 255).getRGB();
                    imagemLimiar.setRGB(c, l, rgb);
                }
                else{
                    int rgb = new Color(0, 0, 0).getRGB();
                    imagemLimiar.setRGB(c, l, rgb);
                }
            }
        }
        
        mostarComparativo();
    }//GEN-LAST:event_btnORActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameManipulacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameManipulacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameManipulacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameManipulacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameManipulacao().setVisible(true);
            }
        });
    }

    void mostrarOriginal(){
        ImageIcon icon = new ImageIcon(imagemOriginal);
        Image img = icon.getImage();
        Image img2 = img.getScaledInstance(400, 400, 0);
        icon = new ImageIcon(img2);
        imagem1.setPreferredSize(new Dimension(400,400));
        Lb1.setBackground(null);
        Lb1.setIcon(icon);
        Lb1.setText(null);
    }
    
    void mostrarComparativa(){
        ImageIcon icon = new ImageIcon(imagemComparativa);
        Image img = icon.getImage();
        Image img2 = img.getScaledInstance(400, 400, 0);
        icon = new ImageIcon(img2);
        imagem2.setPreferredSize(new Dimension(400,400));
        Lb2.setBackground(null);
        Lb2.setIcon(icon);
        Lb2.setText(null);
    }
    
    void reload(){
        try {
            imagemOriginal = ImageIO.read( new File("imagemOriginal.jpg"));
            ImageIcon icon = new ImageIcon(imagemOriginal);
            Image img = icon.getImage();
            Image img2 = img.getScaledInstance(400, 400, 0);
            icon = new ImageIcon(img2);
            imagem1.setPreferredSize(new Dimension(400,400));
            Lb1.setBackground(null);
            Lb1.setIcon(icon);
            Lb1.setText(null);
            
            imagemComparativa = ImageIO.read( new File("ImagemComparativa.jpg"));
            ImageIcon icon2 = new ImageIcon(imagemComparativa);
            Image img3 = icon2.getImage();
            Image img4 = img3.getScaledInstance(400, 400, 0);
            icon = new ImageIcon(img4);
            imagem2.setPreferredSize(new Dimension(400,400));
            Lb2.setBackground(null);
            Lb2.setIcon(icon);
            Lb2.setText(null);
        } catch (IOException ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void mostrarImagem(BufferedImage imagem, JLabel lb, JPanel pn){
        ImageIcon icon = new ImageIcon(imagem);
        Image img = icon.getImage();
        Image img2 = img.getScaledInstance(400, 400, 0);
        icon = new ImageIcon(img2);
        pn.setPreferredSize(new Dimension(400,400));
        lb.setBackground(null);
        lb.setIcon(icon);
        lb.setText(null);
    }
    
    void limiar(int limiar, BufferedImage imagem){
        int largura = imagem.getWidth();
        int altura = imagem.getHeight();
        
        for(int c = 1; c < largura; c++){
            for(int l = 1; l< altura; l++){
                Color cor = new Color(imagem.getRGB(c, l));
                
                int blue = cor.getBlue();
                int red = cor.getRed();
                int green = cor.getGreen();
                
                int sobreposto = (blue + red + green)/3;
                
                if(sobreposto >= limiar){
                    int rgb = new Color(255, 255, 255).getRGB();
                    imagem.setRGB(c, l, rgb);
                }
                else{
                    int rgb = new Color(0, 0, 0).getRGB();
                    imagem.setRGB(c, l, rgb);
                }
            }
        }
        
        try {
            ImageIO.write(imagem, "jpg", new File("imagemLimiar.jpg"));
            imagemLimiar = ImageIO.read( new File("imagemLimiar.jpg"));


        } catch (Exception ex) {
            Logger.getLogger(FrameManipulacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void mostarComparativo(){
        ImageIcon icon = new ImageIcon(imagemLimiar);
        Image img = icon.getImage();
        Image img2 = img.getScaledInstance(400, 400, 0);
        icon = new ImageIcon(img2);
        imagem3.setPreferredSize(new Dimension(400,400));
        Lb3.setBackground(null);
        Lb3.setIcon(icon);
        Lb3.setText(null);
    }

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.JButton Abrir2;
    private javax.swing.JFileChooser Jfc;
    private javax.swing.JLabel Lb1;
    private javax.swing.JLabel Lb2;
    private javax.swing.JLabel Lb3;
    private javax.swing.JTextField TfLimiar;
    private javax.swing.JButton btnAND;
    private javax.swing.JButton btnLimiar;
    private javax.swing.JButton btnNegativo;
    private javax.swing.JButton btnOR;
    private javax.swing.JButton btnReload;
    private javax.swing.JPanel imagem1;
    private javax.swing.JPanel imagem2;
    private javax.swing.JPanel imagem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
